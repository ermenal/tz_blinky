
Discarded input sections

 .group         0x00000000        0xc build/non_secure/main_ns.o
 .group         0x00000000        0xc build/non_secure/main_ns.o
 .group         0x00000000        0xc build/non_secure/main_ns.o
 .group         0x00000000        0xc build/non_secure/main_ns.o
 .group         0x00000000        0xc build/non_secure/main_ns.o
 .group         0x00000000        0xc build/non_secure/main_ns.o
 .group         0x00000000        0xc build/non_secure/main_ns.o
 .text          0x00000000        0x0 build/non_secure/main_ns.o
 .data          0x00000000        0x0 build/non_secure/main_ns.o
 .bss           0x00000000        0x0 build/non_secure/main_ns.o
 .data          0x00000000        0x0 build/non_secure/startup_efr32fg23_ns.o
 .bss           0x00000000        0x0 build/non_secure/startup_efr32fg23_ns.o
 .ARM.extab     0x00000000        0x0 build/non_secure/startup_efr32fg23_ns.o

Memory Configuration

Name             Origin             Length             Attributes
FLASH_NS         0x08020000         0x00060000         xr
RAM_NS           0x20008000         0x00008000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD build/non_secure/main_ns.o
LOAD build/non_secure/startup_efr32fg23_ns.o
LOAD build/secure_cmse_lib.o

.text           0x08020000      0x800
 *(.vectors_ns)
 .vectors_ns    0x08020000      0x780 build/non_secure/startup_efr32fg23_ns.o
 *(.text*)
 .text.delay    0x08020780       0x20 build/non_secure/main_ns.o
                0x08020780                delay
 .text.main_ns  0x080207a0        0xe build/non_secure/main_ns.o
                0x080207a0                main_ns
 *fill*         0x080207ae        0x2 
 .text          0x080207b0       0x50 build/non_secure/startup_efr32fg23_ns.o
                0x080207b0                Reset_HandlerNS
 *(.init)
 *(.fini)
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend.o *crtend?.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend.o *crtend?.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)
 *(.rodata*)
 *(.eh_frame*)

.glue_7         0x08020800        0x0
 .glue_7        0x08020800        0x0 linker stubs

.glue_7t        0x08020800        0x0
 .glue_7t       0x08020800        0x0 linker stubs

.vfp11_veneer   0x08020800        0x0
 .vfp11_veneer  0x08020800        0x0 linker stubs

.v4_bx          0x08020800        0x0
 .v4_bx         0x08020800        0x0 linker stubs

.iplt           0x08020800        0x0
 .iplt          0x08020800        0x0 build/non_secure/main_ns.o

.ARM.extab
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0x08020800                        __exidx_start = .

.ARM.exidx      0x08020800       0x10
 *(.ARM.exidx* .gnu.linkonce.armexidx.*)
 .ARM.exidx     0x08020800       0x10 build/non_secure/startup_efr32fg23_ns.o
                                  0x8 (size before relaxing)
                0x08020810                        __exidx_end = .

.rel.dyn        0x08020810        0x0
 .rel.iplt      0x08020810        0x0 build/non_secure/main_ns.o

.copy.table     0x08020810        0xc
                0x08020810                        . = ALIGN (0x4)
                0x08020810                        __copy_table_start__ = .
                0x08020810        0x4 LONG 0x802081c __etext
                0x08020814        0x4 LONG 0x20008000 __data_start__
                0x08020818        0x4 LONG 0x0 ((__data_end__ - __data_start__) / 0x4)
                0x0802081c                        __copy_table_end__ = .

.zero.table     0x0802081c        0x0
                0x0802081c                        . = ALIGN (0x4)
                0x0802081c                        __zero_table_start__ = .
                0x0802081c                        __zero_table_end__ = .
                0x0802081c                        __etext = ALIGN (0x4)

.data           0x20008000        0x0 load address 0x0802081c
                0x20008000                        __data_start__ = .
 *(vtable)
 *(.data*)
                0x20008000                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__ram_func_section_start = .)
 *(.ram)
                [!provide]                        PROVIDE (__ram_func_section_end = .)
                0x20008000                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)
                0x20008000                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_NAME(.init_array.*))
 *(.init_array)
                [!provide]                        PROVIDE (__init_array_end = .)
                0x20008000                        . = ALIGN (0x4)
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_NAME(.fini_array.*))
 *(.fini_array)
                [!provide]                        PROVIDE (__fini_array_end = .)
 *(.jcr*)
                0x20008000                        . = ALIGN (0x4)
                0x20008000                        __data_end__ = .

.igot.plt       0x20008000        0x0
 .igot.plt      0x20008000        0x0 build/non_secure/main_ns.o

.bss            0x20008000        0x0
                0x20008000                        . = ALIGN (0x4)
                0x20008000                        __bss_start__ = .
 *(.bss)
 *(.bss.*)
 *(COMMON)
                0x20008000                        . = ALIGN (0x4)
                0x20008000                        __bss_end__ = .

.heap           0x20008000      0xc00
                0x20008000                        __HeapBase = .
                0x20008000                        __end__ = .
                0x20008000                        end = __end__
                0x20008000                        _end = __end__
 *(.heap*)
 .heap          0x20008000      0xc00 build/non_secure/startup_efr32fg23_ns.o
                0x20008c00                        __HeapLimit = .

.stack_dummy    0x20008000      0x400
 *(.stack*)
 .stack         0x20008000      0x400 build/non_secure/startup_efr32fg23_ns.o
                0x20010000                        __StackTop = (ORIGIN (RAM_NS) + LENGTH (RAM_NS))
                0x2000fc00                        __StackLimit = (__StackTop - SIZEOF (.stack_dummy))
                [!provide]                        PROVIDE (__stack = __StackTop)
                0x00000001                        ASSERT ((__StackLimit >= __HeapLimit), region RAM overflowed with stack)
                0x00000001                        ASSERT ((LENGTH (FLASH_NS) >= (__etext + SIZEOF (.data))), FLASH memory overflowed !)
OUTPUT(build/non_secure.elf elf32-littlearm)
LOAD linker stubs

.debug_info     0x00000000       0xf7
 .debug_info    0x00000000       0xc6 build/non_secure/main_ns.o
 .debug_info    0x000000c6       0x31 build/non_secure/startup_efr32fg23_ns.o

.debug_abbrev   0x00000000       0xaf
 .debug_abbrev  0x00000000       0x87 build/non_secure/main_ns.o
 .debug_abbrev  0x00000087       0x28 build/non_secure/startup_efr32fg23_ns.o

.debug_aranges  0x00000000       0x48
 .debug_aranges
                0x00000000       0x28 build/non_secure/main_ns.o
 .debug_aranges
                0x00000028       0x20 build/non_secure/startup_efr32fg23_ns.o

.debug_rnglists
                0x00000000       0x19
 .debug_rnglists
                0x00000000       0x19 build/non_secure/main_ns.o

.debug_macro    0x00000000      0xf7a
 .debug_macro   0x00000000       0x6d build/non_secure/main_ns.o
 .debug_macro   0x0000006d      0xac0 build/non_secure/main_ns.o
 .debug_macro   0x00000b2d       0x22 build/non_secure/main_ns.o
 .debug_macro   0x00000b4f       0x8e build/non_secure/main_ns.o
 .debug_macro   0x00000bdd       0x51 build/non_secure/main_ns.o
 .debug_macro   0x00000c2e      0x103 build/non_secure/main_ns.o
 .debug_macro   0x00000d31       0x6a build/non_secure/main_ns.o
 .debug_macro   0x00000d9b      0x1df build/non_secure/main_ns.o

.debug_line     0x00000000      0x359
 .debug_line    0x00000000      0x2ea build/non_secure/main_ns.o
 .debug_line    0x000002ea       0x6f build/non_secure/startup_efr32fg23_ns.o

.debug_str      0x00000000     0x3c17
 .debug_str     0x00000000     0x3c17 build/non_secure/main_ns.o
                               0x3d3b (size before relaxing)
 .debug_str     0x00003c17       0x58 build/non_secure/startup_efr32fg23_ns.o

.comment        0x00000000       0x46
 .comment       0x00000000       0x46 build/non_secure/main_ns.o
                                 0x47 (size before relaxing)

.ARM.attributes
                0x00000000       0x32
 .ARM.attributes
                0x00000000       0x34 build/non_secure/main_ns.o
 .ARM.attributes
                0x00000034       0x20 build/non_secure/startup_efr32fg23_ns.o

.debug_frame    0x00000000       0x54
 .debug_frame   0x00000000       0x54 build/non_secure/main_ns.o

.debug_line_str
                0x00000000       0x3a
 .debug_line_str
                0x00000000       0x3a build/non_secure/startup_efr32fg23_ns.o
